####
# This Dockerfile is used in order to build a container that runs the Quarkus application in native (no JVM) mode.
#
# Before building the container image run:
#
# ./mvnw package -Dnative
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.native -t quarkus/reactive .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/reactive
#
###

FROM quay.io/quarkus/ubi-quarkus-graalvmce-builder-image:jdk-21 AS build
USER quarkus
WORKDIR /code
COPY --chown=quarkus:quarkus mvnw mvnw
COPY --chown=quarkus:quarkus .mvn .mvn
COPY --chown=quarkus:quarkus pom.xml .
RUN ./mvnw -B org.apache.maven.plugins:maven-dependency-plugin:3.1.2:go-offline
COPY --chown=quarkus:quarkus src/main/java src/main/java
COPY --chown=quarkus:quarkus src/main/resources src/main/resources
RUN ./mvnw package -DskipTests -Pnative -Dquarkus.native.native-image-xmx=7G


FROM registry.access.redhat.com/ubi8/ubi-minimal:8.9
WORKDIR /work/
COPY --from=build /code/target/*-runner application
EXPOSE 8080
ENTRYPOINT ["./application", "-Dquarkus.http.host=0.0.0.0"]

#FROM registry.access.redhat.com/ubi8/ubi-minimal:8.9
#WORKDIR /work/
#RUN chown 1001 /work \
#    && chmod "g+rwX" /work \
#    && chown 1001:root /work
#COPY --chown=1001:root target/*-runner /work/application
#
#EXPOSE 8080
#USER 1001
#
#ENTRYPOINT ["./application", "-Dquarkus.http.host=0.0.0.0"]
